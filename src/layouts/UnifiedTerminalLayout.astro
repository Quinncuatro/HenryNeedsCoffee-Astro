---
import Layout from './Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import TypingEffect from '../components/TypingEffect.astro';
import CommandPrompt from '../components/CommandPrompt.astro';
import NavBar from '../components/NavBar.astro';
import { formatDate, getTerminalDateFormat } from '../utils/dateUtils';

interface Props {
  title: string;
  description?: string;
  image?: string;
  pageType: 'main' | 'blog' | 'garden';
  activeNav: 'home' | 'blog' | 'digital-garden' | 'resume' | 'talks-and-pods' | 'contact';
  commandPrompt?: string;
  typingSpeed?: number;
  // Content-specific props
  date?: Date;
  category?: string;
}

const { 
  title, 
  description, 
  image, 
  pageType, 
  activeNav, 
  commandPrompt, 
  typingSpeed,
  date,
  category 
} = Astro.props;

// Get terminal-style date format for login prompt
const currentLoginPrompt = getTerminalDateFormat();

// Generate appropriate command prompt based on page type
const getCommandPromptText = () => {
  if (commandPrompt) return commandPrompt;
  
  switch (pageType) {
    case 'blog':
      return `cat blog/${title.toLowerCase().replace(/\s+/g, '-')}.md`;
    case 'garden':
      return `cat digital-garden/${title.toLowerCase().replace(/\s+/g, '-')}.md`;
    default:
      return 'whoami';
  }
};

const finalCommandPrompt = getCommandPromptText();
const formattedDate = date ? formatDate(date) : null;
---

<Layout title={title} description={description || (pageType === 'garden' ? `Digital Garden: ${title}` : undefined)} image={image}>
  <div class="terminal-window">
    <Header />
    <div class="terminal-content">
      <span class="login-prompt">{currentLoginPrompt}
Welcome to HenryNeeds.Coffee!</span>
      <NavBar activeNav={activeNav} />
      
      {pageType === 'main' ? (
        <TypingEffect command={finalCommandPrompt} typingSpeed={typingSpeed}>
          <slot />
        </TypingEffect>
      ) : (
        <>
          <CommandPrompt prompt={finalCommandPrompt} />
          <article class={pageType === 'blog' ? 'blog-post' : 'garden-post'}>
            <header>
              <h1>{title}</h1>
              <div class="metadata">
                <time datetime={date?.toISOString()}>{formattedDate}</time>
                {category && <span class="category">{category}</span>}
                {pageType === 'garden' && <span class="garden-note">Digital Garden Entry</span>}
              </div>
            </header>
            <div class="content">
              <slot />
            </div>
            <footer class="post-footer">
              {pageType === 'garden' && (
                <p class="garden-explanation">
                  <strong>Note:</strong> This is a <a href="/digital-garden">Digital Garden</a> entry - a place for ideas to grow.
                  It may be updated or expanded over time as my thoughts evolve.
                </p>
              )}
              <div class="navigation">
                <a href={pageType === 'blog' ? '/blog' : '/digital-garden'} class="back-link">
                  ‚Üê Back to {pageType === 'blog' ? 'Blog' : 'Garden'}
                </a>
              </div>
            </footer>
          </article>
        </>
      )}
      
      <Footer />
    </div>
  </div>
</Layout>

<style>
  /* Terminal window styling comes from global.css */
  /* Component-specific overrides */
  .login-prompt {
    font-size: 0.9rem;
  }

  .menu-bar a:hover {
    text-decoration: none;
  }

  /* Article styling for both blog and garden posts */
  .blog-post,
  .garden-post {
    max-width: 100%;
    margin-bottom: var(--space-xl);
    margin-top: 0; /* No additional top margin - use CommandPrompt's bottom margin only */
  }

  .blog-post header,
  .garden-post header {
    margin-bottom: var(--space-xl);
  }

  .blog-post h1,
  .garden-post h1 {
    font-size: var(--font-size-3xl);
    margin-top: 0; /* Override global h1 margin for main title - follows UI/UX best practices */
    margin-bottom: var(--space-sm);
    color: var(--color-primary);
  }

  .metadata {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    font-size: var(--font-size-sm);
    color: var(--color-text-muted);
  }

  .category {
    background-color: var(--color-primary);
    color: var(--color-text);
    padding: calc(var(--space-xs) / 2) var(--space-xs);
    border-radius: var(--border-radius-sm);
  }

  .garden-note {
    display: inline-block;
    padding: calc(var(--space-xs) / 2) var(--space-xs);
    background-color: var(--color-primary-light);
    color: var(--color-primary-dark);
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-sm);
  }

  .content {
    line-height: 1.7;
    margin-bottom: var(--space-xl);
  }

  .content :global(p) {
    margin-bottom: var(--space-lg);
  }

  .content :global(h2) {
    margin-top: var(--space-xl);
    color: var(--color-primary);
  }

  .content :global(img) {
    max-width: 100%;
    height: auto;
    display: block;
    margin: var(--space-lg) 0;
    border-radius: var(--border-radius-sm);
  }

  .content :global(pre) {
    background-color: var(--color-code-bg);
    padding: var(--space-md);
    border-radius: var(--border-radius-sm);
    overflow: auto;
    color: var(--color-code-text);
    margin: var(--space-lg) 0;
  }

  .post-footer {
    margin-top: var(--space-2xl);
    padding-top: var(--space-lg);
    border-top: 1px solid var(--color-border);
  }

  .garden-explanation {
    padding: var(--space-md);
    background-color: rgba(0, 0, 0, 0.05);
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-sm);
  }

  .navigation {
    margin-top: var(--space-lg);
    display: flex;
    justify-content: space-between;
  }

  .back-link {
    display: inline-block;
    padding: var(--space-sm) var(--space-md);
    background-color: var(--color-primary);
    color: var(--color-text);
    border-radius: var(--border-radius-sm);
    text-decoration: none;
    transition: background-color var(--transition-fast);
  }

  .back-link:hover {
    background-color: var(--color-primary-dark);
    text-decoration: none;
  }

  @media (max-width: 768px) {
    .menu-bar {
      justify-content: center;
    }

    .blog-post h1,
    .garden-post h1 {
      font-size: var(--font-size-2xl);
    }
  }
</style>